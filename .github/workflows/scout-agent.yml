name: Scout Agent - Model Validation & Discovery

on:
  schedule:
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual validation'
        required: true
        default: 'Manual validation request'
      specific_provider:
        description: 'Specific provider to validate (optional)'
        required: false
        type: choice
        options:
          - 'all'
          - 'google'
          - 'mistral'
          - 'cohere'
          - 'groq'
          - 'openrouter'
      announcement_url:
        description: 'Model announcement URL (if validating new model)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-models:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: scout-agent/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('scout-agent/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd scout-agent
          npm install

      - name: Validate current 5-provider models
        run: |
          cd scout-agent
          node validate-models.js \
            --providers=google,mistral,cohere,groq,openrouter \
            --reason="${{ github.event.inputs.reason || 'Scheduled validation' }}" \
            --specific-provider="${{ github.event.inputs.specific_provider || 'all' }}" \
            --announcement-url="${{ github.event.inputs.announcement_url || '' }}"

      - name: Scout for new models
        run: |
          cd scout-agent
          node research-api-models.js \
            --providers=google,mistral,cohere,groq,openrouter \
            --check-new-models=true

      - name: Analyze model eligibility
        run: |
          cd scout-agent
          node analyze-models.js \
            --filter-geographic=true \
            --filter-quality=true \
            --output=api-eligible-models.json

      - name: Generate validation report
        run: |
          cd scout-agent
          node debug-backend.js \
            --generate-report=true \
            --output=api-models-report.md

      - name: Update backend with validated models
        run: |
          cd scout-agent
          node validate-models-backend.js \
            --update-backend=true \
            --backend-url="https://askme-backend-proxy.onrender.com"

      - name: Check for changes
        id: check_changes
        run: |
          cd scout-agent
          if git diff --quiet HEAD -- validated_models.json api-eligible-models.json excluded_models.json; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create pull request for model updates
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: scout-agent/model-updates-${{ github.run_number }}
          title: 'Scout Agent: Model validation and discovery updates'
          body: |
            ## 🤖 Scout Agent Model Updates

            **Trigger**: ${{ github.event.inputs.reason || 'Scheduled validation' }}
            **Provider**: ${{ github.event.inputs.specific_provider || 'all' }}
            **Timestamp**: ${{ github.run_id }}

            ### Changes Made

            - ✅ Validated current 5-provider models
            - 🔍 Scouted for new model releases
            - 📊 Analyzed model eligibility and quality
            - 🚀 Updated backend with validated models

            ### Files Updated

            - `scout-agent/validated_models.json` - Current validated models
            - `scout-agent/api-eligible-models.json` - API-eligible models
            - `scout-agent/excluded_models.json` - Excluded models
            - `scout-agent/api-models-report.md` - Validation report

            ### Provider Status

            - **Google Gemini**: Status checked and validated
            - **Mistral AI**: Status checked and validated
            - **Cohere**: Status checked and validated
            - **Groq**: Status checked and validated
            - **OpenRouter**: Status checked and validated

            ### Review Required

            Please review the model updates and validate that:
            1. New models meet our quality standards
            2. Deprecated models are properly excluded
            3. Provider configurations are correct
            4. Backend integration is working

            **Auto-generated by Scout Agent** 🤖
          commit-message: |
            Update validated models data - ${{ github.event.inputs.reason || 'Scheduled validation' }} [skip ci]
          delete-branch: true

      - name: Post validation summary
        if: always()
        run: |
          cd scout-agent
          echo "## Scout Agent Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event.inputs.reason || 'Scheduled validation' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Provider**: ${{ github.event.inputs.specific_provider || 'all' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Changes**: ${{ steps.check_changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY

          if [ -f "api-models-report.md" ]; then
            echo "## Validation Report" >> $GITHUB_STEP_SUMMARY
            head -20 api-models-report.md >> $GITHUB_STEP_SUMMARY
          fi

  notify-on-failure:
    needs: validate-models
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Create failure issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Scout Agent Validation Failed',
              body: `## Scout Agent Validation Failure

              **Workflow**: ${{ github.workflow }}
              **Run ID**: ${{ github.run_id }}
              **Trigger**: ${{ github.event.inputs.reason || 'Scheduled validation' }}
              **Provider**: ${{ github.event.inputs.specific_provider || 'all' }}
              **Timestamp**: ${{ github.event.head_commit.timestamp }}

              ### Investigation Required

              The Scout Agent model validation workflow has failed. Please investigate:

              1. Check the workflow logs for errors
              2. Verify provider API endpoints are accessible
              3. Confirm validation scripts are working correctly
              4. Check if new models need configuration updates

              ### Next Steps

              - [ ] Review workflow logs
              - [ ] Test provider APIs manually
              - [ ] Update validation scripts if needed
              - [ ] Re-run validation once fixed

              **Auto-generated by Scout Agent** 🤖`,
              labels: ['bug', 'scout-agent', 'high-priority']
            });
